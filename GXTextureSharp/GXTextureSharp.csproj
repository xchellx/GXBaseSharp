<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Platforms>x64</Platforms>
    <Configurations>Debug;Release</Configurations>
    <ErrorReport>none</ErrorReport>
    <ProduceReferenceAssembly>True</ProduceReferenceAssembly>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <BaseOutputPath>bin</BaseOutputPath>
    <BaseIntermediateOutputPath>obj</BaseIntermediateOutputPath>
    <Company>Yonder</Company>
    <Authors>Yonder</Authors>
    <Title>$(AssemblyName)</Title>
    <Product>$(AssemblyName)</Product>
    <Description>A C# managed wrapper around an unmanaged library gxtexture.</Description>
    <Copyright>Copyright © Yonder 2024</Copyright>
    <PackageLicenseFile>..\LICENSE</PackageLicenseFile>
    <PackAsTool>False</PackAsTool>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <Prefer32Bit>False</Prefer32Bit>
    <DisableRuntimeMarshalling>True</DisableRuntimeMarshalling>
    <IsAotCompatible>true</IsAotCompatible>
    <IsTrimmable>true</IsTrimmable>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
  </PropertyGroup>

  <PropertyGroup  Condition="'$(Configuration)' == 'Release'">
    <StripSymbols>true</StripSymbols>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(SolutionDir)\extern\UtilSharp\UtilSharp\UtilSharp.csproj" />
    <TrimmerRootAssembly Include="UtilSharp" />
  </ItemGroup>

  <ItemGroup>
    <None Update="libgxtexture.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="libc++.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="libgxtexture.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="GXTextureSharp_PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/build.cmd gxtexture libc++.dll &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/install.cmd gxtexture $(ProjectDir) libc++.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/build.sh gxtexture &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/install.sh gxtexture $(ProjectDir)" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
  </Target>

  <Target Name="GXTextureSharp_PostClean" AfterTargets="Clean">
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/clean.cmd gxtexture $(ProjectDir) libc++.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/clean.sh gxtexture $(ProjectDir)" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
  </Target>

  <Target Name="GXTextureSharp_PreRebuild" BeforeTargets="BeforeRebuild">
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/clean.cmd gxtexture $(ProjectDir) libc++.dll &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/build.cmd gxtexture libc++.dll &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/install.cmd gxtexture $(ProjectDir) libc++.dll" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
    <Exec Command="$(SolutionDir)/extern/gxtexture_base_build/clean.sh gxtexture $(ProjectDir) &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/build.sh gxtexture &amp;&amp; $(SolutionDir)/extern/gxtexture_base_build/install.sh gxtexture $(ProjectDir)" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
  </Target>

  <Target Name="GXTextureSharp_GenerateGitVersion" BeforeTargets="GetGitHash;GenerateAssemblyAttributes">
    <Exec Command="git rev-parse HEAD || echo 0.0.0" ConsoleToMSBuild="true" IgnoreExitCode="true">
      <Output PropertyName="GXTextureSharp_OutputA" TaskParameter="ConsoleOutput"/>
    </Exec>

    <Exec Command="git describe --tag --abbrev=0 || echo unknown" ConsoleToMSBuild="true" IgnoreExitCode="true">
      <Output PropertyName="GXTextureSharp_OutputB" TaskParameter="ConsoleOutput"/>
    </Exec>

    <PropertyGroup>
      <GXTextureSharp_InfoVersion>$(GXTextureSharp_OutputA.Trim()) based on $(GXTextureSharp_OutputB.Trim())</GXTextureSharp_InfoVersion>
      <GXTextureSharp_Version>$(GXTextureSharp_OutputB.Trim().Substring(1))</GXTextureSharp_Version>
      <FileVersion>$(GXTextureSharp_Version)</FileVersion>
      <InformationalVersion>$(GXTextureSharp_InfoVersion)</InformationalVersion>
      <AssemblyVersion>$(GXTextureSharp_Version)</AssemblyVersion>
    </PropertyGroup>
  </Target>

</Project>
